<?xml version="1.0" ?>

<!-- motion.xml
Generic motion controlled by a Python script.
This preset is designed to be loaded after cfd.xml.

To use it, just include this file, and later set the initial values for the
variables:
motion_iset = The particles set affected (0 by default)
motion_r = Position of the center of rotation
motion_drdt = Linear velocity towards x, y, z
motion_a = Rotation angles phi, theta, psi
motion_dadt = angular velocities dphidt, dthetadt, dpsidt

You should provide a Motion.py script in your execution path, where such
variables should be set each time step.

You can also include this preset several times to impose motions to several
bodies (with the same script Motion.py, or with different ones). For instance:

<Include file="motion.xml" prefix="iset0_"/>
<Include file="motion.xml" prefix="iset2_"/>
<Tools>
    <Tool action="insert" before="iset0_MotionUnTransform" type="set_scalar" name="motion_iset0" in="motion_iset" value="0"/>
    <Tool action="replace" type="python" name="iset0_MotionData" path="MotionFirstBody.py"/>
    <Tool action="insert" before="iset2_MotionUnTransform" type="set_scalar" name="motion_iset2" in="motion_iset" value="2"/>
    <Tool action="replace" type="python" name="iset2_MotionData" path="MotionSecondBody.py"/>
</Tools>
-->

<sphInput>
    <Variables>
        <!-- Particles set affected -->
        <Variable name="motion_iset" type="unsigned int" value="0" />
        <!-- position and velocity -->
        <Variable name="motion_r" type="vec" value="0.0, 0.0, 0.0, 0.0" />
        <Variable name="motion_drdt" type="vec" value="0.0, 0.0, 0.0, 0.0" />
        <!-- rotation and angular velocity (vec4 is faster than vec3) -->
        <Variable name="motion_a" type="vec4" value="0.0, 0.0, 0.0, 0.0" />
        <Variable name="motion_dadt" type="vec4" value="0.0, 0.0, 0.0, 0.0" />
    </Variables>

    <Tools>
        <!-- We must start recovering the initial position of the particles
        undoing the previous time step transformation. -->
        <Tool action="insert" before="t = t + dt" type="kernel" name="MotionUnTransform" path="@RESOURCES_OUTPUT_DIR@/OpenCL/MotionUnTransform.cl"/>
        <!-- Now we can call a generic Python script, which should be
        defined, in order to set the motion parameters for the current time
        step -->
        <Tool action="insert" after_prefix="MotionUnTransform" type="python" name="MotionData" path="Motion.py"/>
        <!-- Such that we can apply the new transformation -->
        <Tool action="insert" after_prefix="MotionData" type="kernel" name="MotionVelocity" path="@RESOURCES_OUTPUT_DIR@/OpenCL/MotionVelocity.cl"/>
        <Tool action="insert" after_prefix="MotionVelocity" type="kernel" name="MotionTransform" path="@RESOURCES_OUTPUT_DIR@/OpenCL/MotionTransform.cl"/>
    </Tools>
</sphInput>
